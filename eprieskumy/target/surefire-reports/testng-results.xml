<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" total="6" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="33447" started-at="2017-06-19T17:49:07Z" finished-at="2017-06-19T17:49:41Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="33447" started-at="2017-06-19T17:49:07Z" finished-at="2017-06-19T17:49:41Z">
      <class name="cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="6" started-at="2017-06-19T19:49:07Z" finished-at="2017-06-19T19:49:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:07Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-06-19T19:49:07Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Failed to load ApplicationContext]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:552)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in cz.mendelu.pef.swi.eprieskumy.utils.DatabaseConfig: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: EprieskumyPersistence] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1054)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:829)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	... 39 more
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: EprieskumyPersistence] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 54 more
Caused by: org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: Dotaznik, for columns: [org.hibernate.mapping.Column(answers)]
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:390)
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:363)
	at org.hibernate.mapping.Property.isValid(Property.java:225)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:530)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:265)
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:329)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:443)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 59 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="testSave()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="testSave" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest.testSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest@467aecef]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.mendelu.swi.eprieskumy.dao.DotaznikDaoTest -->
      <class name="cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="testFindById()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="testFindById" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest.testFindById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="testFindByUzivatelDotaznik()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="testFindByUzivatelDotaznik" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByUzivatelDotaznik -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest.testFindByUzivatelDotaznik()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest.testSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="testSave()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="testSave" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest@fad74ee]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- cz.mendelu.swi.eprieskumy.dao.OdpovedDaoTest -->
      <class name="cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest.testSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="testSetRole()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="testSetRole" duration-ms="1" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetRole -->
        <test-method status="SKIP" signature="testSave()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="testSave" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest@3d921e20]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-06-19T19:49:41Z" finished-at="2017-06-19T19:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest.testSetRole()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- cz.mendelu.swi.eprieskumy.dao.UzivatelDaoTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
